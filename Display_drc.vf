////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 12.2
//  \   \         Application : sch2hdl
//  /   /         Filename : Display_drc.vf
// /___/   /\     Timestamp : 02/10/2016 03:09:27
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\12.2\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family xa9500xl -verilog Display_drc.vf -w "C:/Users/Gabriel Santos/ULA/Display.sch"
//Design Name: Display
//Device: xa9500xl
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module h_MUSER_Display(A, 
                       B, 
                       hOut);

    input A;
    input B;
   output hOut;
   
   wire XLXN_1;
   
   AND2  XLXI_1 (.I0(B), 
                .I1(XLXN_1), 
                .O(hOut));
   INV  XLXI_2 (.I(A), 
               .O(XLXN_1));
endmodule
`timescale 1ns / 1ps

module g_MUSER_Display(A, 
                       B, 
                       C, 
                       D, 
                       E, 
                       gOut);

    input A;
    input B;
    input C;
    input D;
    input E;
   output gOut;
   
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_11;
   wire XLXN_15;
   wire XLXN_16;
   
   OR5  XLXI_1 (.I0(XLXN_6), 
               .I1(XLXN_5), 
               .I2(XLXN_4), 
               .I3(XLXN_3), 
               .I4(A), 
               .O(gOut));
   AND2  XLXI_3 (.I0(D), 
                .I1(XLXN_15), 
                .O(XLXN_3));
   AND2  XLXI_4 (.I0(XLXN_11), 
                .I1(D), 
                .O(XLXN_4));
   AND2  XLXI_5 (.I0(XLXN_16), 
                .I1(C), 
                .O(XLXN_5));
   AND2  XLXI_6 (.I0(XLXN_11), 
                .I1(B), 
                .O(XLXN_6));
   INV  XLXI_7 (.I(E), 
               .O(XLXN_11));
   INV  XLXI_8 (.I(C), 
               .O(XLXN_15));
   INV  XLXI_9 (.I(D), 
               .O(XLXN_16));
endmodule
`timescale 1ns / 1ps

module f_MUSER_Display(A, 
                       B, 
                       C, 
                       D, 
                       E, 
                       fOut);

    input A;
    input B;
    input C;
    input D;
    input E;
   output fOut;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_13;
   wire XLXN_15;
   wire XLXN_17;
   wire XLXN_19;
   
   OR5  XLXI_1 (.I0(XLXN_4), 
               .I1(XLXN_3), 
               .I2(XLXN_2), 
               .I3(XLXN_1), 
               .I4(A), 
               .O(fOut));
   AND2  XLXI_2 (.I0(XLXN_19), 
                .I1(XLXN_15), 
                .O(XLXN_1));
   AND3  XLXI_3 (.I0(XLXN_17), 
                .I1(C), 
                .I2(XLXN_19), 
                .O(XLXN_2));
   AND3  XLXI_4 (.I0(C), 
                .I1(XLXN_15), 
                .I2(XLXN_17), 
                .O(XLXN_3));
   AND3  XLXI_5 (.I0(D), 
                .I1(B), 
                .I2(XLXN_13), 
                .O(XLXN_4));
   INV  XLXI_6 (.I(C), 
               .O(XLXN_13));
   INV  XLXI_7 (.I(E), 
               .O(XLXN_15));
   INV  XLXI_8 (.I(B), 
               .O(XLXN_17));
   INV  XLXI_9 (.I(D), 
               .O(XLXN_19));
endmodule
`timescale 1ns / 1ps

module e_MUSER_Display(A, 
                       C, 
                       D, 
                       E, 
                       eOut);

    input A;
    input C;
    input D;
    input E;
   output eOut;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_10;
   wire XLXN_11;
   
   OR3  XLXI_1 (.I0(XLXN_2), 
               .I1(A), 
               .I2(XLXN_1), 
               .O(eOut));
   AND2  XLXI_2 (.I0(XLXN_11), 
                .I1(XLXN_10), 
                .O(XLXN_1));
   AND2  XLXI_3 (.I0(XLXN_11), 
                .I1(D), 
                .O(XLXN_2));
   INV  XLXI_4 (.I(E), 
               .O(XLXN_11));
   INV  XLXI_5 (.I(C), 
               .O(XLXN_10));
endmodule
`timescale 1ns / 1ps

module d_MUSER_Display(A, 
                       C, 
                       D, 
                       E, 
                       dOut);

    input A;
    input C;
    input D;
    input E;
   output dOut;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_5;
   wire XLXN_19;
   wire XLXN_21;
   wire XLXN_22;
   
   OR5  XLXI_1 (.I0(XLXN_1), 
               .I1(XLXN_2), 
               .I2(XLXN_3), 
               .I3(XLXN_5), 
               .I4(A), 
               .O(dOut));
   AND2  XLXI_2 (.I0(XLXN_22), 
                .I1(XLXN_21), 
                .O(XLXN_5));
   AND2  XLXI_3 (.I0(D), 
                .I1(XLXN_21), 
                .O(XLXN_3));
   AND2  XLXI_4 (.I0(XLXN_22), 
                .I1(D), 
                .O(XLXN_2));
   AND3  XLXI_5 (.I0(C), 
                .I1(E), 
                .I2(XLXN_19), 
                .O(XLXN_1));
   INV  XLXI_6 (.I(E), 
               .O(XLXN_22));
   INV  XLXI_7 (.I(D), 
               .O(XLXN_19));
   INV  XLXI_8 (.I(C), 
               .O(XLXN_21));
endmodule
`timescale 1ns / 1ps

module c_MUSER_Display(A, 
                       B, 
                       C, 
                       D, 
                       E, 
                       cOut);

    input A;
    input B;
    input C;
    input D;
    input E;
   output cOut;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_24;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_30;
   
   OR4  XLXI_1 (.I0(XLXN_4), 
               .I1(XLXN_3), 
               .I2(XLXN_2), 
               .I3(XLXN_1), 
               .O(cOut));
   AND2  XLXI_2 (.I0(XLXN_24), 
                .I1(XLXN_30), 
                .O(XLXN_1));
   AND2  XLXI_3 (.I0(E), 
                .I1(XLXN_24), 
                .O(XLXN_2));
   AND3  XLXI_4 (.I0(XLXN_28), 
                .I1(XLXN_24), 
                .I2(C), 
                .O(XLXN_3));
   AND3  XLXI_5 (.I0(XLXN_24), 
                .I1(B), 
                .I2(XLXN_27), 
                .O(XLXN_4));
   INV  XLXI_6 (.I(A), 
               .O(XLXN_24));
   INV  XLXI_7 (.I(D), 
               .O(XLXN_30));
   INV  XLXI_8 (.I(C), 
               .O(XLXN_27));
   INV  XLXI_9 (.I(B), 
               .O(XLXN_28));
endmodule
`timescale 1ns / 1ps

module b_MUSER_Display(A, 
                       B, 
                       C, 
                       D, 
                       E, 
                       bOut);

    input A;
    input B;
    input C;
    input D;
    input E;
   output bOut;
   
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_11;
   wire XLXN_15;
   wire XLXN_22;
   wire XLXN_25;
   wire XLXN_27;
   wire XLXN_28;
   
   OR5  XLXI_1 (.I0(XLXN_11), 
               .I1(XLXN_9), 
               .I2(XLXN_8), 
               .I3(XLXN_7), 
               .I4(XLXN_6), 
               .O(bOut));
   AND3  XLXI_2 (.I0(XLXN_25), 
                .I1(XLXN_22), 
                .I2(XLXN_15), 
                .O(XLXN_6));
   AND3  XLXI_3 (.I0(XLXN_27), 
                .I1(XLXN_25), 
                .I2(XLXN_15), 
                .O(XLXN_7));
   AND3  XLXI_4 (.I0(XLXN_28), 
                .I1(XLXN_27), 
                .I2(XLXN_15), 
                .O(XLXN_8));
   AND3  XLXI_5 (.I0(B), 
                .I1(C), 
                .I2(XLXN_15), 
                .O(XLXN_9));
   AND4  XLXI_6 (.I0(XLXN_15), 
                .I1(D), 
                .I2(E), 
                .I3(XLXN_22), 
                .O(XLXN_11));
   INV  XLXI_7 (.I(A), 
               .O(XLXN_15));
   INV  XLXI_8 (.I(B), 
               .O(XLXN_22));
   INV  XLXI_9 (.I(C), 
               .O(XLXN_25));
   INV  XLXI_11 (.I(D), 
                .O(XLXN_27));
   INV  XLXI_12 (.I(E), 
                .O(XLXN_28));
endmodule
`timescale 1ns / 1ps

module OR6_MXILINX_Display(I0, 
                           I1, 
                           I2, 
                           I3, 
                           I4, 
                           I5, 
                           O);

    input I0;
    input I1;
    input I2;
    input I3;
    input I4;
    input I5;
   output O;
   
   wire I35;
   
   OR4  I_36_87 (.I0(I0), 
                .I1(I1), 
                .I2(I2), 
                .I3(I35), 
                .O(O));
   OR3  I_36_88 (.I0(I3), 
                .I1(I4), 
                .I2(I5), 
                .O(I35));
endmodule
`timescale 1ns / 1ps

module a_MUSER_Display(A, 
                       B, 
                       C, 
                       D, 
                       E, 
                       aOut);

    input A;
    input B;
    input C;
    input D;
    input E;
   output aOut;
   
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_23;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   
   (* HU_SET = "XLXI_1_0" *) 
   OR6_MXILINX_Display  XLXI_1 (.I0(XLXN_4), 
                               .I1(XLXN_5), 
                               .I2(XLXN_6), 
                               .I3(XLXN_7), 
                               .I4(XLXN_8), 
                               .I5(A), 
                               .O(aOut));
   AND2  XLXI_2 (.I0(XLXN_26), 
                .I1(XLXN_23), 
                .O(XLXN_8));
   AND2  XLXI_3 (.I0(D), 
                .I1(XLXN_27), 
                .O(XLXN_7));
   AND2  XLXI_4 (.I0(D), 
                .I1(XLXN_26), 
                .O(XLXN_6));
   AND2  XLXI_5 (.I0(B), 
                .I1(XLXN_23), 
                .O(XLXN_5));
   AND3  XLXI_6 (.I0(C), 
                .I1(E), 
                .I2(XLXN_28), 
                .O(XLXN_4));
   INV  XLXI_7 (.I(C), 
               .O(XLXN_23));
   INV  XLXI_8 (.I(E), 
               .O(XLXN_26));
   INV  XLXI_9 (.I(B), 
               .O(XLXN_27));
   INV  XLXI_10 (.I(D), 
                .O(XLXN_28));
endmodule
`timescale 1ns / 1ps

module Display(Overflow, 
               Z, 
               Aa, 
               Bb, 
               Cc, 
               Dd, 
               Ee, 
               Ff, 
               Gg, 
               Hh);

    input Overflow;
    input [3:0] Z;
   output Aa;
   output Bb;
   output Cc;
   output Dd;
   output Ee;
   output Ff;
   output Gg;
   output Hh;
   
   
   a_MUSER_Display  XLXI_1 (.A(Overflow), 
                           .B(Z[3]), 
                           .C(Z[2]), 
                           .D(Z[1]), 
                           .E(Z[0]), 
                           .aOut(Aa));
   b_MUSER_Display  XLXI_2 (.A(Overflow), 
                           .B(Z[3]), 
                           .C(Z[2]), 
                           .D(Z[1]), 
                           .E(Z[0]), 
                           .bOut(Bb));
   c_MUSER_Display  XLXI_3 (.A(Overflow), 
                           .B(Z[3]), 
                           .C(Z[2]), 
                           .D(Z[1]), 
                           .E(Z[0]), 
                           .cOut(Cc));
   d_MUSER_Display  XLXI_4 (.A(Overflow), 
                           .C(Z[2]), 
                           .D(Z[1]), 
                           .E(Z[0]), 
                           .dOut(Dd));
   e_MUSER_Display  XLXI_5 (.A(Overflow), 
                           .C(Z[2]), 
                           .D(Z[1]), 
                           .E(Z[0]), 
                           .eOut(Ee));
   f_MUSER_Display  XLXI_6 (.A(Overflow), 
                           .B(Z[3]), 
                           .C(Z[2]), 
                           .D(Z[1]), 
                           .E(Z[0]), 
                           .fOut(Ff));
   g_MUSER_Display  XLXI_7 (.A(Overflow), 
                           .B(Z[3]), 
                           .C(Z[2]), 
                           .D(Z[1]), 
                           .E(Z[0]), 
                           .gOut(Gg));
   h_MUSER_Display  XLXI_8 (.A(Overflow), 
                           .B(Z[3]), 
                           .hOut(Hh));
endmodule
